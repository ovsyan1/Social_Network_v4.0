{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","count","MyPosts","React","memo","console","log","postsElements","posts","map","post","likesCount","newPostElement","createRef","postsBlock","onChange","text","current","value","updateNewPostText","ref","newPostText","cols","rows","onClick","addPost","MyPostsContainer","connect","state","profilePage","dispatch","action","updateNewPostTextActionCreator","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","onDoubleClick","autoFocus","onBlur","e","currentTarget","updateStatus","ProfileInfo","profile","discriptionBlock","photos","large","fullName","aboutMe","contacts","instagram","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"mappings":"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","file":"static/js/3.c8fb3887.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1JseI\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"post\":\"MyPosts_post__38Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__3HzxI\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n    return <div className={classes.item}>\n                    <img src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\" alt=\"avatar-person\"/>\n                <div>\n                    <span>{props.message}</span>\n                </div>\n                <div>\n                    <span>{props.count}</span>\n                </div>\n            </div>\n}\n\nexport default Post;","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst MyPosts = React.memo((props) => {\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return nextProps !== this.props || nextState !== this.state;\n    // }\n\n        console.log('render');\n       let postsElements = props.posts.map(post => {\n            return <Post message={post.message} count={post.likesCount} key={post.likesCount}/>\n    });\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = () => {\n        props.addPost();\n    }\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.updateNewPostText(text)\n    }\n    return <div className={classes.postsBlock}>\n                <h3>My posts</h3>\n                <div className={classes.post}>\n                    <div>\n                        <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} cols=\"20\" rows=\"4\"/>\n                    </div>\n                    <div>\n                       <button onClick={onAddPost}>Add post</button> \n                    </div>\n                </div>\n                    <div className={classes.posts}>\n                        New post\n                        {postsElements}\n                    </div>\n            </div> \n})\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profile_reducer';\nimport MyPosts from './MyPosts';\n\n\nlet mapStateToProps = state => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = dispatch => {\n    return {\n        updateNewPostText: (text) => {\n            let action = updateNewPostTextActionCreator(text);\n            dispatch(action)\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React, { useState } from 'react';\n\nconst ProfileStatusWithHooks =  (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    const activateMode = () => {\n        setEditMode(true);\n    }\n    const deactivateMode = () => {\n        setEditMode(false);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n        props.updateStatus(status);\n    }\n\n\n        return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={activateMode}>{ props.status || '---------'}</span>\n            </div>\n            }\n            { editMode &&\n            <div>\n                <input autoFocus={true}\n                onBlur={deactivateMode}\n                onChange={onStatusChange}\n                value={status}\n                />\n            </div>\n            }\n        </div>\n    )    \n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport classes from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, updateStatus}) => {\n    if(!profile){\n        return <Preloader />\n    }\n    return (\n            <div>\n                <div className={classes.discriptionBlock}>\n                    <img src={profile.photos.large}></img>\n                    <div><b>Name:</b> {profile.fullName}</div>\n                    <div><b>Status:</b> {profile.aboutMe}</div>\n                    <div><b>Insta account:</b> {profile.contacts.instagram}</div>\n                    <div><b>Looking for a job: </b>{profile.lookingForAJobDescription}</div>\n                    <ProfileStatusWithHooks status={profile.fullName} updateStatus={updateStatus}/>\n                </div>\n            </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\n\n\nconst Profile = (props) => {\n    return (\n            <div>\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n                <MyPostsContainer />\n            </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile_reducer';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount(){\n        let userId = this.props.match.params.userId;\n        if(!userId){\n            userId = this.props.authorizedUserId;\n            if(!userId){\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render(){\n        return(\n                <Profile {...this.props} \n                        profile={this.props.profile} \n                        status={this.props.status} \n                        updateStatus={this.props.updateStatus}\n                />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    state: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render(){\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent\n} "],"sourceRoot":""}