{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js"],"names":["DialogItem","props","path","id","className","classes","dialog","active","user_img","src","img","alt","to","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","onChange","e","text","target","value","updateNewMessageChange","newMessageText","cols","rows","onClick","sendMessage","compose","connect","dispatch","updateNewMessageTextActionCreator","addMessageActionCreator","withAuthRedirect","module","exports","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"mappings":"+JAceA,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACY,sBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,QAA7C,UACI,qBAAKH,UAAWC,IAAQG,SAAUC,IAAKR,EAAMS,IAAKC,IAAI,KACtD,cAAC,IAAD,CAASC,GAAIV,EAAb,SAAoBD,EAAMY,WCD/BC,EAJC,SAACb,GACb,OAAO,qBAAKG,UAAWC,IAAQU,QAAxB,SAAkCd,EAAMc,WCqCpCC,EAnCC,SAACf,GACb,IAAIgB,EAAQhB,EAAMiB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAf,GACrC,OAAO,cAAC,EAAD,CAAYH,GAAIG,EAAOH,GAAoBU,KAAMP,EAAOO,KAAMH,IAAKJ,EAAOI,KAA1CJ,EAAOH,OAG7CmB,EAAmBL,EAAMM,SAASF,KAAI,SAAAN,GACtC,OAAO,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQZ,OAY3D,OACI,sBAAKC,UAAWC,IAAQe,QAAxB,UACI,qBAAKhB,UAAWC,IAAQmB,aAAxB,SACIL,IAEJ,sBAAKf,UAAWC,IAAQkB,SAAxB,UACKD,EACD,8BACQ,0BAAUG,SAdN,SAACC,GACrB,IAAIC,EAAOD,EAAEE,OAAOC,MACpB5B,EAAM6B,uBAAuBH,IAY0BE,MAAOZ,EAAMc,eAAgBC,KAAK,KAAKC,KAAK,QAE3F,wBAAQC,QAnBL,WACXjC,EAAMkC,eAkBE,wB,wBCZDC,sBACXC,aAlBkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACoB,GACtB,MAAO,CACHR,uBAAwB,SAACH,GACrBW,EAASC,YAAkCZ,KAE/CQ,YAAa,WACTG,EAASE,oBAOjBC,IAFWL,CAGbpB,I,mBC1BF0B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,4B,mJCGnPC,EAA6B,SAAC3B,GAAD,MAAY,CACzC4B,OAAQ5B,EAAM6B,KAAKD,SAGVJ,EAAmB,SAACM,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAIC,KAAKhD,MAAM4C,OAER,cAACE,EAAD,eAAeE,KAAKhD,QAFG,cAAC,IAAD,CAAUW,GAAI,eAJT,GAEXsC,IAAMH,WAUtC,OAFqCV,YAAQO,EAARP,CAAoCW","file":"static/js/4.d26c3efe.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n                <div className={`${classes.dialog} ${classes.active}`}>\n                    <img className={classes.user_img} src={props.img} alt=\"\" />\n                    <NavLink to={path}>{props.name}</NavLink>\n                </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from '../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return(<div className={classes.message}>{props.message}</div>)\n}\n\nexport default Message;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\n\n\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map(dialog => {\n       return <DialogItem id={dialog.id} key={dialog.id} name={dialog.name} img={dialog.img}/>\n    })\n\n    let messagesElements = state.messages.map(message => {\n        return <Message message={message.message} key={message.id}/>\n    })\n    \n    const addTxt = () => {\n        props.sendMessage();\n    }\n    const onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateNewMessageChange(text);\n    }\n\n    // if(!props.isAuth)return <Redirect to={'/login'}/>;\n    return(\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n               {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n                <div>\n                        <textarea onChange={onMessageChange}   value={state.newMessageText} cols=\"10\" rows=\"2\"></textarea>     \n                </div>\n                <button onClick={addTxt}>add</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from '../../redux/dialogs_reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageChange: (text) => {\n            dispatch(updateNewMessageTextActionCreator(text));\n        },\n        sendMessage: () => {\n            dispatch(addMessageActionCreator());\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs); // HOC\n\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n// export default DialogsContainer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"user_img\":\"Dialogs_user_img__1aK89\"};","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render(){\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent\n} "],"sourceRoot":""}