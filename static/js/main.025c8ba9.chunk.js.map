{"version":3,"sources":["api/api.js","components/common/Paginator/Paginator.module.css","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/Users/Users.module.css","components/Header/Header.module.css","components/Login/Login.module.css","redux/profile_reducer.js","redux/dialogs_reducer.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Header/Header.jsx","redux/auth_reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Sidebar/Sidebar.jsx","components/Navbar/Navbar.jsx","redux/object-helpers.js","redux/users_reducer.js","assets/images/gordon.jpg","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users_selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app_reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Preloader","props","src","preloader","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","count","initialState","posts","id","message","likesCount","newPostText","profile","addPostActionCreator","type","setStatus","updateNewPostTextActionCreator","text","newText","getUserProfile","dispatch","a","resultCode","profileReducer","state","action","newPost","stateCopy","push","filter","p","postId","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogs","name","img","messages","newMessageText","addMessageActionCreator","updateNewMessageTextActionCreator","dialogsReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","classes","header","loginBlock","isAuth","onClick","to","SET_USER_DATA","SET_ERROR","setAuthUserData","payload","getAuthUserData","setErrors","errors","authReducer","HeaderContainer","this","React","Component","connect","auth","Sidebar","box_circle","box_under_circle_names","Navbar","nav","item","activeClassName","active","item_friends","updateObjectInArray","items","itemId","objPropName","newObjProps","users","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","User","followingProgress","photos","small","userPhoto","alt","disabled","btn","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","box_pagination","page","cn","selectedPage","pageNumber","e","Users","u","getUsers","createSelector","usersPage","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","compose","bind","totalCount","Error","error","MyForm","values","touched","handleChange","handleBlur","handleSubmit","onSubmit","htmlFor","onChange","onBlur","value","LoginContainer","withFormik","mapPropsToValues","validate","setSubmitting","displayName","SET_INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","ProcessingInstruction","env","PUBLIC_URL","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.025c8ba9.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n        withCredentials: true,\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        headers: {\n            \"API-KEY\": \"886dcef8-4104-430b-9b0c-ba57cfe7be11\"\n        }\n})\n\n\nexport const usersAPI = {\n    requestUsers(currentPage = 1, pageSize = 10){\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId){\n       return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId){\n     return  instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('Obsolete method, please use profile API object');\n        return profileAPI.getProfile(userId);\n     },\n}\n\nexport const profileAPI = {\n    getProfile(userId){\n        return instance.get(`profile/${userId}`).then(response => {\n            return response.data\n        })\n     },\n     getStatus(userId){\n         return instance.get(`profile/status/${userId}`);\n     },\n     updateStatus(status){\n        return instance.put(`profile/status/`,{status: status});\n    }\n}\n\nexport const authAPI = {\n    me(){\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe) {\n        return instance.post('auth/login', { email, password, rememberMe });\n    },\n    logout(){\n        return instance.delete('auth/login');\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"btn\":\"Paginator_btn__C1fmc\"};","export default __webpack_public_path__ + \"static/media/preloader.6af3b8bc.gif\";","import React from 'react';\nimport preloader from '../../../assets/images/preloader.gif';\n\nconst Preloader = (props) => {\n    return <img src={preloader}/>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__3OuDf\",\"btn\":\"Users_btn__9AIH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__17Wu6\"};","import {profileAPI, usersAPI} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet count = 6;\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you?', likesCount: 'likes 23'},\n        { id: 2, message: \"It's my first post\", likesCount: 'likes 56'},\n        { id: 3, message: 'yo'},\n        { id: 4, message: 'yo'},\n        { id: 5, message: 'yo'},\n        { id: 6, message: 'yo'}\n      ],\n      newPostText: 'it-kamasutra.com',\n      profile: null,\n      status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n        switch(action.type){\n            case ADD_POST: {\n                let newPost = {\n                id: ++count,\n                message: state.newPostText,\n                likesCount: 0\n                };\n                let stateCopy = {...state}\n                stateCopy.posts = [...state.posts];\n                stateCopy.posts.push(newPost);\n                stateCopy.newPostText = '';\n                return stateCopy;\n            }    \n            case UPDATE_NEW_POST_TEXT:\n                let stateCopy = {...state};\n                stateCopy.newPostText = action.newText;\n                return stateCopy;\n            case SET_USER_PROFILE: \n                return {...state, profile: action.profile}\n            case SET_STATUS:\n                return {...state, status: action.status}\n            case DELETE_POST:\n                return {...state, posts: state.posts.filter(p => p.postId != action.postId)}\n            default:\n                return state;\n        }\n}\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST\n    }\n}\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const updateNewPostTextActionCreator = (text) => \n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n        let data = await usersAPI.getProfile(userId);\n        dispatch(setUserProfile(data));\n} \n\nexport const getStatus = (userId) => async (dispatch) => {\n        let response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n  let response = await profileAPI.getStatus(status);\n            if(response.data.resultCode === 0){\n                dispatch(setStatus(status));\n            } \n}\n\n\n\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet count = 6;\n\nlet initialState = {\n    dialogs: [\n        { id: 1, name: 'Dimych', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'},\n        { id: 2, name: 'Andrew', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'},\n        { id: 3, name: 'Sveta', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'},\n        { id: 4, name: 'Sasha', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'},\n        { id: 5, name: 'Sasha', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'},\n        { id: 6, name: 'Valera', img: 'https://uybor.uz/borless/uybor/img/user-images/user_no_photo_600x600.png'}\n        ],\n       messages: [\n        { id: 1, message: 'Hi'},\n        { id: 2, message: 'How are you?'},\n        { id: 3, message: 'yo'},\n        { id: 4, message: 'yo'},\n        { id: 5, message: 'yo'},\n        { id: 6, message: 'yo'}\n        ],\n        newMessageText: 'best-network'\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n        switch(action.type){\n            case SEND_MESSAGE:\n                return {\n                    ...state,\n                    newMessageText: '',\n                    messages:[\n                        ...state.messages,\n                        {id: ++count, message: state.newMessageText}\n                    ]\n                }               \n            case UPDATE_NEW_MESSAGE_TEXT:\n                return {\n                    ...state,\n                    newMessageText: action.newText\n                }\n            default:\n                return state;\n        }\n}\n\n\nexport const addMessageActionCreator = () => {\n    return {\n        type: SEND_MESSAGE,\n        status: 'message'\n    }\n}\n\nexport const updateNewMessageTextActionCreator = (text) => {\n    return{\n        type: UPDATE_NEW_MESSAGE_TEXT,\n        newText: text,\n        status: 'message'\n    }\n}\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"item_friends\":\"Navbar_item_friends__q7317\",\"box_circle\":\"Navbar_box_circle__1j-Ig\",\"box_under_circle_names\":\"Navbar_box_under_circle_names__3ZCan\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport classes from './Header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst Header = (props) => {\n\n       return  (\n       <header className={classes.header}>\n                    <img src='https://cdn.logo.com/hotlink-ok/logo-social.png'></img>\n\n                    <div className={classes.loginBlock}>\n                        {props.isAuth \n                            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \n                            : <NavLink to={'/login'}>Login</NavLink>}\n                    </div>\n        </header>\n    )\n}\n\nexport default Header;","import {authAPI} from '../api/api';\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst SET_ERROR = 'samurai-network/auth/SET_ERROR';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n        switch(action.type){\n            case SET_USER_DATA:\n                return {\n                    ...state,\n                    ...action.payload\n                }\n            case SET_ERROR:\n                return {...action, ...action.data}            \n            default:\n                return state;\n        }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, \n        payload: {userId, email, login, isAuth}});\n\n// export const getAuthUserData = () => (dispatch) => {\n//     authAPI.me().then(response => {\n//         if(response.data.resultCode === 0) { // User authorized\n//             let {id, email, login} = response.data.data;\n//             dispatch(setAuthUserData(id, email, login, true))\n//         }\n// })\n// }\n\nexport const getAuthUserData = () => async (dispatch) => {\n   let response = await authAPI.me();\n        if(response.data.resultCode === 0) { // User authorized\n            let {id, email, login} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true))\n        }\n}\n\nexport const setErrors = (errors) => (dispatch) => {\n    dispatch({type: SET_ERROR, data: {errors}});\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, true);\n            if(response.data.resultCode === 0){\n                dispatch(getAuthUserData());\n                dispatch(setErrors(false));\n            }else{\n                dispatch(setErrors(true));\n            }        \n}\n\nexport const logout = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.logout(email, password, rememberMe);\n            if(response.data.resultCode === 0){\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\n\n\n\n\n\nexport default authReducer;","import React from 'react';\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {logout} from '../../redux/auth_reducer';\n\nclass HeaderContainer extends React.Component {\n    render(){\n       return  (\n       <Header {...this.props} />\n    ) \n    }         \n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport classes from '../Navbar.module.css';\n\nconst Sidebar = (props) => {\n    return (\n        <div>\n        <div className={classes.box_circle}>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                    <div className={classes.box_under_circle_names}>\n                 <span>Vasya</span><span>Sasha</span><span>Sveta</span>\n        </div>\n        </div>\n    )\n}\nexport default Sidebar;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Navbar.module.css';\nimport Sidebar from './Sidebar/Sidebar';\n\nconst Navbar = (props) => {\n    return  (\n            <nav className={classes.nav}>\n                <div className={classes.item}>\n                    <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={classes.active}>Dialogs</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink>\n                </div>\n                <div className={classes.item}>\n                    <NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink>\n                </div>\n                <div className={classes.item_friends}>\n                    <NavLink to=\"/friends\" activeClassName={classes.active}>Friends</NavLink>\n                    <Sidebar />\n                </div>\n            </nav>\n    )\n}\n\nexport default Navbar;"," export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.users.map(user => {\n    if(user[objPropName] === itemId){\n        return{...user, ...newObjProps}\n    }\n    return user;\n})\n} ","import {usersAPI} from '../api/api';\nimport {updateObjectInArray} from './object-helpers';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [2, 3, 4]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    \n        switch(action.type){\n            case FOLLOW: \n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n                // users: state.users.map(user => {\n                //     if(user.id === action.userId){\n                //         return{...user, followed: true}\n                //     }\n                //     return user;\n                // })\n            }\n            case UNFOLLOW:\n                return {\n                    ...state,\n                    users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n                    // users: state.users.map(user => {\n                    //     if(user.id === action.userId){\n                    //         return{...user, followed: false}\n                    //     }\n                    //     return user\n                    // })\n                }\n            case SET_USERS:\n                return {...state, users: action.users}\n\n            case SET_CURRENT_PAGE:\n                return {...state, currentPage: action.currentPage }\n            case SET_USERS_TOTAL_COUNT:\n                return {...state, totalUsersCount: action.count }\n            case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n            case TOGGLE_IS_FOLLOWING_PROGRESS:\n                return {\n                    ...state, \n                    followingInProgress: action.isFetching \n                    ? [...state.followingInProgress, action.userId]\n                    : [...state.followingInProgress.filter(id => id != action.userId)]\n                }\n            default:\n                return state;\n        }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setUsersTotalCount = (count) => ({type: SET_USERS_TOTAL_COUNT, count});\nexport const toggleIsFetching = (isFetching) => ({type:TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, userId) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching })\n\n\nexport const requestUsers = (page, pageSize) => {\n      return async (dispatch) => {\n            dispatch(toggleIsFetching(true));\n            dispatch(setCurrentPage(page));\n            let data =  await usersAPI.requestUsers(page, pageSize);\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setUsersTotalCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if(response.data.resultCode === 0){\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => async (dispatch) => {\n            let apiMethod = usersAPI.follow.bind(usersAPI);\n            followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n}\n\nexport const unfollow = (userId) => async (dispatch) => {\n                let apiMethod = usersAPI.unfollow.bind(usersAPI);\n                followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess)\n}\n\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/gordon.979b5270.jpg\";","import React from 'react';\nimport classes from './Users.module.css';\nimport userPhoto from '../../assets/images/gordon.jpg';\nimport  {NavLink} from 'react-router-dom';\n\nconst User = ({user, followingProgress, unfollow, follow }) => {\n    return(\n        <div>\n            <div>\n                    <NavLink to={'/profile/' + user.id}>\n                    <img className={classes.img} \n                        src={ user.photos.small !== null ? user.photos.small : userPhoto } \n                        alt={user.name}\n                    />\n                    </NavLink>\n            </div>\n            <div>\n                    {user.followed \n                    ? <button disabled={followingProgress} className={classes.btn} \n                    onClick={() => {unfollow(user.id)}}>unFollow</button>\n                    : <button disabled={followingProgress} className={classes.btn} \n                    onClick={() => {follow(user.id);}}>Follow</button>} \n            </div>\n                    <span>\n                        <span>\n                            <div>{user.name}</div>\n                            <div>{user.status ? user.status : 'I do not have status'}</div>\n                        </span>\n                            <span>\n                                <div>{'user.location.country'}</div>\n                                <div>{user.id}</div>\n                            </span>\n                     </span>\n            </div>\n    )\n}\n\nexport default User;","import React, {useState} from 'react';\nimport classes from './Paginator.module.css';\nimport cn from 'classnames';\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for(let i  = 1;i <= pagesCount;i++){\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n    return (\n        <div className={classes.box_pagination}>\n                { portionNumber > 1 && \n                    <button className={classes.btn} \n                            onClick={() => {setPortionNumber(portionNumber - 1)}}>\n                            &#60;\n                    </button>\n                }\n                    {pages\n                    .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                    .map(page => {\n                        return (\n                        <span className={cn({\n                            [classes.selectedPage]: currentPage === page\n                        }, classes.pageNumber ) }\n                            key={page} \n                            onClick={(e) => onPageChanged(page)}>\n                            {page}\n                        </span>\n                        )\n            })}\n            {portionCount > portionNumber && \n            <button className={classes.btn} \n                onClick={() => {setPortionNumber(portionNumber + 1)}}>\n                    &#62;\n            </button>\n            }\n        </div>\n    )\n}\n\nexport default Paginator;","import React from 'react';\nimport User from './User';\nimport Paginator from '../common/Paginator/Paginator';\n\nconst Users = ({\n    currentPage, \n    onPageChanged, \n    totalItemsCount, \n    pageSize, \n    users, \n    followingProgress, \n    follow, \n    unfollow }) => {\n    return(\n        <div>\n                <Paginator \n                    currentPage={currentPage} \n                    onPageChanged={onPageChanged} \n                    totalItemsCount={totalItemsCount} \n                    pageSize={pageSize}\n                />\n                {users.map(u => {\n                   return (\n                    <User key={u.id} \n                            user={u} \n                            followingProgress={followingProgress}\n                            follow={follow}\n                            unfollow={unfollow}\n                            />\n                    )\n                })}\n        </div>\n    )\n}\n\nexport default Users;","import {createSelector} from 'reselect';\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getTotalItemsCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport { follow, unfollow, \n        setCurrentPage, toggleFollowingProgress, requestUsers\n} from '../../redux/users_reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getUsers , getPageSize, \n        getTotalItemsCount, getCurrentPage, \n        getIsFetching, getFollowingInProgress } from '../../redux/users_selectors';\n\nclass UsersContainer extends React.Component{\n    componentDidMount(){\n        let {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n    }\n    onPageChanged = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n    }\n    render(){\n        return (\n        <>\n        {this.props.isFetching ? <Preloader /> : null}\n            <Users totalItemsCount={this.props.totalItemsCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage} \n                onPageChanged={this.onPageChanged}\n                users={this.props.users} \n                follow={this.props.follow} \n                unfollow={this.props.unfollow}\n                isFetching={this.props.isFetching} \n                followingInProgress={this.props.followingInProgress}\n            />\n        </>)\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalItemsCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\n)(UsersContainer)\n","import { withFormik } from 'formik';\nimport React from 'react';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {login, setErrors} from \"../../redux/auth_reducer\";\nimport classes from './Login.module.css';\n\nclass Error extends React.Component {\n    render(){\n        return <div className={classes.error}>Error: wrong login or email !!!</div>\n    }\n}\n\nclass MyForm extends React.Component {\n    render() {\n        const {\n            values,\n            touched, \n            errors,\n            handleChange,\n            handleBlur,\n            handleSubmit\n        } = this.props;\n        if(this.props.auth.isAuth){\n            return <Redirect to={'/profile'} />\n        }\n        return (\n            <div>\n                    <h1>Login</h1>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"email\">Email:</label>\n                        <div>\n                        <input \n                            type=\"text\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                            name=\"email\"\n                        />\n                        </div>\n                        {errors.email && touched.email && <div id=\"feedback\">{errors.email}</div>}\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <div>\n                        <input \n                            type=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            name=\"password\"\n                        />\n                        </div>\n                            {errors.password && touched.password && <div id=\"feedback\">{errors.password}</div>}\n                    </div>\n                    <div>\n                        <input \n                            type=\"checkbox\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.rememberMe}\n                            name=\"rememberMe\"\n                        />\n                        <span>rememberMe</span>\n                        {this.props.auth.errors && <Error />}\n                    </div>\n                    <div>\n                        <button type=\"submit\">Login</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n};\n\nconst LoginContainer = withFormik({\n    mapPropsToValues: () => ({email: ''}),\n    validate: values => {\n        const errors = {};\n        if(!values.email){\n            errors.email = <div className={classes.error}>{'Required'}</div>;\n        }\n        return errors;\n    },\n    handleSubmit: (values, { props, setSubmitting }) => {\n        // console.log(values);\n        props.login(values.email, values.password, values.rememberMe);\n        setSubmitting(false);\n    },\n    displayName: 'BasicForm'\n})(MyForm);\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default compose(\n    connect(mapStateToProps, {login}),\n)(LoginContainer);","import { getAuthUserData } from './auth_reducer';\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: null\n}\n\nconst appReducer = (state = initialState, action) => {\n        switch(action.type){\n            case SET_INITIALIZED_SUCCESS:\n                return {\n                    ...state,\n                    initialized: true\n                }         \n            default:\n                return state;\n        }\n}\n\n\nexport const initializedSuccess = () => ({\n        type: SET_INITIALIZED_SUCCESS\n    });\n\nexport const initializeApp = () => (dispatch) => {\n       let promise =  dispatch(getAuthUserData());\n       Promise.all([promise])\n            .then(() => {\n                dispatch(initializedSuccess());  \n            })\n        \n}\n\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore, compose} from 'redux';\nimport profileReducer from './profile_reducer';\nimport dialogsReducer from './dialogs_reducer';\nimport usersReducer from './users_reducer';\nimport authReducer from './auth_reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport appReducer from './app_reducer';\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer\n});\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n\nwindow.store = store;\n\nexport default store","import React, { Suspense } from 'react';\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <Component {...props}/>\n        </Suspense>\n    }\n} ","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar  from './components/Navbar/Navbar';\nimport {Route} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport LoginContainer from './components/Login/Login';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from './redux/app_reducer';\nimport {withRouter} from 'react-router-dom';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {withSuspense} from './hoc/withSuspense';\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\n  render(){\n    if(!this.props.initialized){\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n          <HeaderContainer/>\n          <Navbar/>\n          <div className=\"app-wrapper-content\">\n            <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\n            <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>\n            <Route path=\"/news\" render={() => <ProfileContainer />}/>\n            <Route path=\"/music\" render={() => <ProfileContainer />}/>\n            <Route path=\"/settings\" render={() => <ProfileContainer />}/>\n            <Route path=\"/friends\" render={() => <ProfileContainer />}/>\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <LoginContainer />} />\n          </div>\n      </div>\n  );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = () => {\n    return ( \n      <HashRouter basename={ProcessingInstruction.env.PUBLIC_URL}>\n        <Provider store={store}>\n          <AppContainer />\n        </Provider>\n      </HashRouter>\n    )\n}\n\nexport default SamuraiJSApp;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}